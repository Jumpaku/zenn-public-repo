title: "イベントループとプロミスチェーンで学ぶJavaScriptの非同期処理"
summary: "JavaScript の非同期処理は非常に難しく、その難しさの本質は「制御の流れ」が掴みづらいことにあります。
\n\n
この本では、非同期処理を理解するために必要な概念であり、仕組みでもあるイベントループにおいてプロミスチェーンの処理がどのように動くかをクイズ形式で学ぶことによって、非同期処理の「制御の流れ」を掴めるように訓練します。
\n\n
知識面については、中枢となるイベントループの機構から、実行環境と API、async/await や Promise.all など一通りの範囲を学習し、応用として並列化や順序づけて反復処理を行うための制御方法と TypeScript での型注釈までを網羅します。
"
topics: ["JavaScript", "Node", "Deno", "非同期処理", "Promise"]
published: true
price: 0
chapters:
  - 1-epasync-begin # はじめに
  - sec-01-epasync # 第１章
  - f-epasync-asynchronous-apis # 非同期 API と環境
  - f-epasync-synchronus-apis # 同期 API とブロッキング
  - 2-epasync-event-loop # イベントループの概要と注意点
  - d-epasync-task-microtask-queues # タスクキューとマイクロタスクキュー
  - e-epasync-v8-engine # V8エンジン
  - b-epasync-callstack-execution-context #コールスタックと実行コンテキスト
  - c-epasync-what-event-loop # それぞれのイベントループ
  - sec-02-epasync # 第２章
  - a-epasync-promise-basic-concept # Promise の基本概念
  - 3-epasync-promise-constructor-executor-func # Promise コンストラクタと Executor 関数
  - 4-epasync-callback-is-sync-or-async # コールバック関数の同期実行と非同期実行
  - g-epasync-resolve-reject # resolve 関数と reject 関数の使い方
  - 5-epasync-multiple-promises # 複数の Promise を走らせる
  - 6-epasync-then-always-return-new-promise # then メソッドは常に新しい Promise を返す
  - 7-epasync-pass-value-to-the-next-chain # Promise chain で値を繋ぐ
  - 8-epasync-return-promise-in-then-callback # then メソッドのコールバックで Promise インスタンスを返す
  - 9-epasync-dont-nest-promise-chain # Promise chain はネストさせない
  - 10-epasync-dont-use-side-effect # コールバックで副作用となる非同期処理
  - 11-epasync-omit-return-by-arrow-shortcut # アロー関数で return を省略する
  - h-epasync-catch-finally # catch メソッドと finally メソッド
  - 12-epasync-wrapping-macrotask # 古い非同期APIをPromiseでラップする
  - 13-epasync-loop-is-nested # イベントループは内部にネストしたループがある
  - sec-03-epasync # 第３章
  - 14-epasync-chain-to-async-await # Promise chain から async 関数へ
  - 15-epasync-v8-converting # V8 エンジンによる async/await の内部変換
  - 16-epasync-top-level-async # Top-level await
  - sec-04-epasync # 第４章 - 制御と型注釈
  - 17-epasync-static-method # Promise の静的メソッドと並列化
  - 18-epasync-await-position # await 式の配置による制御
  - 19-epasync-async-loop # 反復処理の制御
  - k-epasync-iterator-generator # イテレータとイテラブルとジェネレータ関数
  - j-epasync-ts-promise-type-annotation # TypeScript における Promise の型注釈
  - y-epasync-conclusion # 「非同期処理」のまとめ
  - x-epasync-epilogue # あとがき
  - z-epasync-reference # 参考文献

